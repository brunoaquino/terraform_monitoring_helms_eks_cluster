---
# Configuração do OpenTelemetry Collector conforme o schema esperado
mode: deployment

# Configuração da aplicação OpenTelemetry
config:
  receivers:
    otlp:
      protocols:
        grpc:
          endpoint: 0.0.0.0:4317
        http:
          endpoint: 0.0.0.0:4318
    
    jaeger:
      protocols:
        grpc:
          endpoint: 0.0.0.0:14250
        thrift_http:
          endpoint: 0.0.0.0:14268
        thrift_compact:
          endpoint: 0.0.0.0:6831
        thrift_binary:
          endpoint: 0.0.0.0:6832

    prometheus:
      config:
        scrape_configs:
          - job_name: 'otel-collector'
            scrape_interval: 10s
            static_configs:
              - targets: ['0.0.0.0:8888']

  processors:
    batch:
      timeout: 1s
      send_batch_size: 1024
    
    memory_limiter:
      check_interval: 5s
      limit_percentage: 80
      spike_limit_percentage: 25
    
    resource:
      attributes:
        - key: service.name
          action: upsert
          value: "otel-collector"

  exporters:
    otlp/jaeger:
      endpoint: jaeger-collector:14250
      tls:
        insecure: true
    
    elasticsearch:
      endpoints: ["http://${elasticsearch_host}:${elasticsearch_port}"]
      index: traces
      
    prometheus:
      endpoint: 0.0.0.0:8889
    
    logging:
      verbosity: normal

  service:
    pipelines:
      traces:
        receivers: [otlp, jaeger]
        processors: [memory_limiter, batch, resource]
        exporters: [otlp/jaeger, elasticsearch, logging]
      
      metrics:
        receivers: [otlp, prometheus]
        processors: [memory_limiter, batch, resource]
        exporters: [prometheus, logging]

# Configuração do serviço Kubernetes 
service:
  type: ${service_type}

# Configuração das portas conforme o schema do chart
ports:
  otlp:
    enabled: true
    containerPort: 4317
    servicePort: 4317
    protocol: TCP
  otlp-http:
    enabled: true
    containerPort: 4318
    servicePort: 4318
    protocol: TCP
  jaeger-compact:
    enabled: true
    containerPort: 6831
    servicePort: 6831
    protocol: UDP
  jaeger-thrift:
    enabled: true
    containerPort: 14268
    servicePort: 14268
    protocol: TCP
  jaeger-grpc:
    enabled: true
    containerPort: 14250
    servicePort: 14250
    protocol: TCP
  metrics:
    enabled: true
    containerPort: 8889
    servicePort: 8889
    protocol: TCP

# Configurações de recursos
resources:
  requests:
    cpu: ${otel_collector_resources_requests_cpu}
    memory: ${otel_collector_resources_requests_memory}
  limits:
    cpu: ${otel_collector_resources_limits_cpu}
    memory: ${otel_collector_resources_limits_memory}

# Configurações de afinidade e anti-afinidade
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - opentelemetry-collector
          topologyKey: kubernetes.io/hostname 